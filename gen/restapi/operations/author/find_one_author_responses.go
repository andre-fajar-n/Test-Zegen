// Code generated by go-swagger; DO NOT EDIT.

package author

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"zegen/gen/models"
)

// FindOneAuthorOKCode is the HTTP code returned for type FindOneAuthorOK
const FindOneAuthorOKCode int = 200

/*
FindOneAuthorOK Success find data

swagger:response findOneAuthorOK
*/
type FindOneAuthorOK struct {

	/*
	  In: Body
	*/
	Payload *models.SuccessFindOneAuthor `json:"body,omitempty"`
}

// NewFindOneAuthorOK creates FindOneAuthorOK with default headers values
func NewFindOneAuthorOK() *FindOneAuthorOK {

	return &FindOneAuthorOK{}
}

// WithPayload adds the payload to the find one author o k response
func (o *FindOneAuthorOK) WithPayload(payload *models.SuccessFindOneAuthor) *FindOneAuthorOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find one author o k response
func (o *FindOneAuthorOK) SetPayload(payload *models.SuccessFindOneAuthor) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindOneAuthorOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
FindOneAuthorDefault Server Error

swagger:response findOneAuthorDefault
*/
type FindOneAuthorDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFindOneAuthorDefault creates FindOneAuthorDefault with default headers values
func NewFindOneAuthorDefault(code int) *FindOneAuthorDefault {
	if code <= 0 {
		code = 500
	}

	return &FindOneAuthorDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the find one author default response
func (o *FindOneAuthorDefault) WithStatusCode(code int) *FindOneAuthorDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the find one author default response
func (o *FindOneAuthorDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the find one author default response
func (o *FindOneAuthorDefault) WithPayload(payload *models.Error) *FindOneAuthorDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find one author default response
func (o *FindOneAuthorDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindOneAuthorDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
