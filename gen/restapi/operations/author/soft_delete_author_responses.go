// Code generated by go-swagger; DO NOT EDIT.

package author

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"zegen/gen/models"
)

// SoftDeleteAuthorOKCode is the HTTP code returned for type SoftDeleteAuthorOK
const SoftDeleteAuthorOKCode int = 200

/*
SoftDeleteAuthorOK Success delete

swagger:response softDeleteAuthorOK
*/
type SoftDeleteAuthorOK struct {

	/*
	  In: Body
	*/
	Payload *models.Success `json:"body,omitempty"`
}

// NewSoftDeleteAuthorOK creates SoftDeleteAuthorOK with default headers values
func NewSoftDeleteAuthorOK() *SoftDeleteAuthorOK {

	return &SoftDeleteAuthorOK{}
}

// WithPayload adds the payload to the soft delete author o k response
func (o *SoftDeleteAuthorOK) WithPayload(payload *models.Success) *SoftDeleteAuthorOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the soft delete author o k response
func (o *SoftDeleteAuthorOK) SetPayload(payload *models.Success) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SoftDeleteAuthorOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
SoftDeleteAuthorDefault Server Error

swagger:response softDeleteAuthorDefault
*/
type SoftDeleteAuthorDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSoftDeleteAuthorDefault creates SoftDeleteAuthorDefault with default headers values
func NewSoftDeleteAuthorDefault(code int) *SoftDeleteAuthorDefault {
	if code <= 0 {
		code = 500
	}

	return &SoftDeleteAuthorDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the soft delete author default response
func (o *SoftDeleteAuthorDefault) WithStatusCode(code int) *SoftDeleteAuthorDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the soft delete author default response
func (o *SoftDeleteAuthorDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the soft delete author default response
func (o *SoftDeleteAuthorDefault) WithPayload(payload *models.Error) *SoftDeleteAuthorDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the soft delete author default response
func (o *SoftDeleteAuthorDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SoftDeleteAuthorDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
