// Code generated by go-swagger; DO NOT EDIT.

package author

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"zegen/gen/models"
)

// UpdateAuthorOKCode is the HTTP code returned for type UpdateAuthorOK
const UpdateAuthorOKCode int = 200

/*
UpdateAuthorOK Success create

swagger:response updateAuthorOK
*/
type UpdateAuthorOK struct {

	/*
	  In: Body
	*/
	Payload *models.Success `json:"body,omitempty"`
}

// NewUpdateAuthorOK creates UpdateAuthorOK with default headers values
func NewUpdateAuthorOK() *UpdateAuthorOK {

	return &UpdateAuthorOK{}
}

// WithPayload adds the payload to the update author o k response
func (o *UpdateAuthorOK) WithPayload(payload *models.Success) *UpdateAuthorOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update author o k response
func (o *UpdateAuthorOK) SetPayload(payload *models.Success) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAuthorOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
UpdateAuthorDefault Server Error

swagger:response updateAuthorDefault
*/
type UpdateAuthorDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateAuthorDefault creates UpdateAuthorDefault with default headers values
func NewUpdateAuthorDefault(code int) *UpdateAuthorDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateAuthorDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update author default response
func (o *UpdateAuthorDefault) WithStatusCode(code int) *UpdateAuthorDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update author default response
func (o *UpdateAuthorDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update author default response
func (o *UpdateAuthorDefault) WithPayload(payload *models.Error) *UpdateAuthorDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update author default response
func (o *UpdateAuthorDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAuthorDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
