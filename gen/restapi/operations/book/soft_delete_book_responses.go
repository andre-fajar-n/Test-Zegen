// Code generated by go-swagger; DO NOT EDIT.

package book

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"zegen/gen/models"
)

// SoftDeleteBookOKCode is the HTTP code returned for type SoftDeleteBookOK
const SoftDeleteBookOKCode int = 200

/*
SoftDeleteBookOK Success delete

swagger:response softDeleteBookOK
*/
type SoftDeleteBookOK struct {

	/*
	  In: Body
	*/
	Payload *models.Success `json:"body,omitempty"`
}

// NewSoftDeleteBookOK creates SoftDeleteBookOK with default headers values
func NewSoftDeleteBookOK() *SoftDeleteBookOK {

	return &SoftDeleteBookOK{}
}

// WithPayload adds the payload to the soft delete book o k response
func (o *SoftDeleteBookOK) WithPayload(payload *models.Success) *SoftDeleteBookOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the soft delete book o k response
func (o *SoftDeleteBookOK) SetPayload(payload *models.Success) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SoftDeleteBookOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
SoftDeleteBookDefault Server Error

swagger:response softDeleteBookDefault
*/
type SoftDeleteBookDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSoftDeleteBookDefault creates SoftDeleteBookDefault with default headers values
func NewSoftDeleteBookDefault(code int) *SoftDeleteBookDefault {
	if code <= 0 {
		code = 500
	}

	return &SoftDeleteBookDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the soft delete book default response
func (o *SoftDeleteBookDefault) WithStatusCode(code int) *SoftDeleteBookDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the soft delete book default response
func (o *SoftDeleteBookDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the soft delete book default response
func (o *SoftDeleteBookDefault) WithPayload(payload *models.Error) *SoftDeleteBookDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the soft delete book default response
func (o *SoftDeleteBookDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SoftDeleteBookDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
